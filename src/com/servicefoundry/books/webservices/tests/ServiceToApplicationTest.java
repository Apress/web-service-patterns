/**
 * Copyright (c) 2003, Paul B. Monday
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 
 * Neither the name of the Service Foundry nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.servicefoundry.books.webservices.tests;
import com.servicefoundry.books.webservices.eventservice.*;
import java.rmi.RMISecurityManager;
/**
 *
 * @author  pm141145
 */
public class ServiceToApplicationTest extends javax.swing.JFrame {
    
    /** Creates new form ServiceToApplicationTest */
    public ServiceToApplicationTest() {
        initComponents();
        try {
            ApplicationSubscriberImpl obj = 
                new ApplicationSubscriberImpl(ivTextArea);
            ApplicationSubscriberImpl.registerToRegistry(
                "ApplicationSubscriberImpl", obj, true);
        } catch (Exception re){
            re.printStackTrace();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        ivScrollPane = new javax.swing.JScrollPane();
        ivTextArea = new javax.swing.JTextArea();

        setTitle("Event Listing");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        ivTextArea.setEditable(false);
        ivTextArea.setMinimumSize(new java.awt.Dimension(240, 240));
        ivTextArea.setPreferredSize(new java.awt.Dimension(240, 240));
        ivScrollPane.setViewportView(ivTextArea);

        getContentPane().add(ivScrollPane, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents
        
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        if(System.getSecurityManager()==null) {
            System.setSecurityManager(new RMISecurityManager());
        }
        new ServiceToApplicationTest().show();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea ivTextArea;
    private javax.swing.JScrollPane ivScrollPane;
    // End of variables declaration//GEN-END:variables
    
}
